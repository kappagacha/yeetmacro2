<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:m="clr-namespace:YeetMacro2.Data.Models"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:skia="clr-namespace:SkiaSharp.Views.Maui.Controls;assembly=SkiaSharp.Views.Maui.Controls"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             x:Class="YeetMacro2.Views.PatternView"
             x:Name="thisView">
    <Grid Padding="3">
        <skia:SKCanvasView x:Name="canvasView" EnableTouchEvents="True" PaintSurface="OnCanvasViewPaintSurface" Touch="OnCanvasViewTouch" />
        <VerticalStackLayout HorizontalOptions="Start" VerticalOptions="Start">
            <HorizontalStackLayout Margin="0" Padding="0">
                <CheckBox Margin="0" VerticalOptions="Center" IsChecked="{Binding PatternNode.IsMultiPattern, Source={Reference thisView}}" />
                <Label Margin="0" VerticalOptions="Center" Padding="0" Text="MultiPattern" />
            </HorizontalStackLayout>
            <HorizontalStackLayout Margin="0" Padding="0">
                <CheckBox Margin="0" VerticalOptions="Center" IsChecked="{Binding Pattern.IsBoundsPattern, Source={Reference thisView}}" />
                <Label Margin="0" VerticalOptions="Center" Padding="0" Text="BoundsPattern" />
            </HorizontalStackLayout>
            <HorizontalStackLayout Margin="0" Padding="0">
                <CheckBox IsChecked="{Binding Pattern.TextMatch.IsActive, Source={Reference thisView}}" />
                <Label Margin="0" VerticalOptions="Center" Padding="0" Text="TextMatch:" />
                <Entry Margin="5,0,0,0" VerticalOptions="Center" Text="{Binding Pattern.TextMatch.Text, Source={Reference thisView}}" />
                <Label Margin="0" VerticalOptions="Center" Padding="0" Text="Whitelist:" />
                <Entry Margin="5,0,0,0" VerticalOptions="Center" Text="{Binding Pattern.TextMatch.WhiteList, Source={Reference thisView}}" />
                <Button Text="Test" Command="{Binding TestPatternTextMatchCommand, Source={Reference thisView}}" CommandParameter="{Binding Pattern, Source={Reference thisView}}"/>
                <Button Text="Apply" Command="{Binding ApplyPatternTextMatchCommand, Source={Reference thisView}}" CommandParameter="{Binding Pattern, Source={Reference thisView}}"/>
            </HorizontalStackLayout>
            <HorizontalStackLayout Margin="0" Padding="0">
                <Entry Margin="0" VerticalOptions="Center" Keyboard="Numeric" Text="{Binding Pattern.VariancePct, Source={Reference thisView}}" />
                <Label Margin="0" VerticalOptions="Center" Padding="0" Text="VariancePct" />
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Save}" Color="{StaticResource Primary}" 
                             Command="{Binding SavePatternCommand, Source={Reference thisView}}" CommandParameter="{Binding Pattern, Source={Reference thisView}}" />
            </HorizontalStackLayout>
            <HorizontalStackLayout Margin="0" Padding="0">
                <CheckBox IsChecked="{Binding Pattern.ColorThreshold.IsActive, Source={Reference thisView}}" CheckedChanged="colorThresholdIsActive_CheckedChanged" />
                <Label Margin="0" VerticalOptions="Center" Padding="0" Text="Color Threshold:" />
                <Entry x:Name="colorThresholdVariancePct" Margin="5,0,0,0" VerticalOptions="Center" Keyboard="Numeric" />
                <Label Margin="0" VerticalOptions="Center" Padding="0" Text="@" />
                <Entry x:Name="colorThresholdColor" Margin="0,0,0,0" VerticalOptions="Center" IsReadOnly="True" />
                <skia:SKCanvasView Margin="5,0,0,0" x:Name="colorPickCanvas" PaintSurface="OnColorPickPaintSurface" WidthRequest="20" HeightRequest="20" />
                <Button Text="Apply" Command="{Binding ApplyColorThresholdCommand, Source={Reference thisView}}">
                    <Button.CommandParameter>
                        <MultiBinding Converter="{conv:PassThroughConverter}">
                            <Binding Path="Pattern" Source="{Reference thisView}" />
                            <Binding Path="Text" Source="{Reference colorThresholdVariancePct}" />
                            <Binding Path="Text" Source="{Reference colorThresholdColor}" />
                            <Binding Path="SelectPatternCommand" Source="{Reference thisView}" />
                        </MultiBinding>
                    </Button.CommandParameter>
                </Button>
            </HorizontalStackLayout>
            <!--<HorizontalStackLayout Margin="0" Padding="0">
                <Label Margin="5,0,0,0" VerticalOptions="Center" Padding="0" Text="{Binding Patterns.SelectedPattern.ColorThreshold}" />
            </HorizontalStackLayout>-->
            <HorizontalStackLayout IsVisible="{Binding PatternNode.IsMultiPattern, Source={Reference thisView}}">
                <CollectionView ItemsSource="{Binding PatternNode.Patterns, Source={Reference thisView}}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate x:DataType="m:Pattern">
                            <Label Text="{Binding Name}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                                <Label.Triggers>
                                    <DataTrigger TargetType="{x:Type Label}" Binding="{Binding IsSelected}" Value="True">
                                        <Setter Property="BackgroundColor" Value="Blue" />
                                    </DataTrigger>
                                </Label.Triggers>
                                <Label.GestureRecognizers>
                                    <TapGestureRecognizer CommandParameter="{Binding .}" Command="{Binding SelectPatternCommand, Source={RelativeSource AncestorType={x:Type v:PatternView}}}" />
                                </Label.GestureRecognizers>
                            </Label>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </HorizontalStackLayout>
        </VerticalStackLayout>
        <VerticalStackLayout VerticalOptions="End" HorizontalOptions="End">
            <HorizontalStackLayout Spacing="5" VerticalOptions="End" HorizontalOptions="End">
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Rectangle}" Color="{StaticResource Primary}" />
                <Label Text="{Binding Pattern.Rect, Source={Reference thisView}}" />
            </HorizontalStackLayout>
            <!--<HorizontalStackLayout Spacing="5" VerticalOptions="End" HorizontalOptions="End">
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Image_aspect_ratio}" Color="{StaticResource Primary}" />
                <Label Text="{Binding Patterns.CurrentResolution}" />
            </HorizontalStackLayout>-->
            <HorizontalStackLayout Spacing="5" VerticalOptions="End" HorizontalOptions="End">
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Image}" Color="{StaticResource Primary}" />
                <Label Text="{Binding Pattern.Resolution, Source={Reference thisView}}" />
            </HorizontalStackLayout>
            <HorizontalStackLayout VerticalOptions="End" HorizontalOptions="End">
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Photo_camera_front}" Color="{StaticResource Primary}"
                             Command="{Binding CapturePatternCommand, Source={Reference thisView}}">
                    <v:ImageView.CommandParameter>
                        <MultiBinding Converter="{conv:PassThroughConverter}">
                            <Binding Path="Pattern" Source="{Reference thisView}" />
                            <Binding Path="PatternNode" Source="{Reference thisView}" />
                            <Binding Path="SelectPatternCommand" Source="{Reference thisView}" />
                        </MultiBinding>
                    </v:ImageView.CommandParameter>
                </v:ImageView>
                <v:ImageView FontFamily="MaterialRegular" Glyph="{x:Static mi:MaterialRegular.Crop_free}" Color="{StaticResource Primary}"
                             Command="{Binding SetPatternBoundsCommand, Source={Reference thisView}}"
                             CommandParameter="{Binding Pattern, Source={Reference thisView}}" />
                <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.HandPointer}" Color="{StaticResource Primary}"
                             Command="{Binding ClickPatternCommand, Source={Reference thisView}}"
                             CommandParameter="{Binding Pattern, Source={Reference thisView}}" />
                <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.Eye}" Color="{StaticResource Primary}"
                             Command="{Binding TestPatternCommand, Source={Reference thisView}}"
                             CommandParameter="{Binding Pattern, Source={Reference thisView}}" />
                <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.Plus}" Color="{StaticResource Primary}"
                             IsVisible="{Binding PatternNode.IsMultiPattern, Source={Reference thisView}}"
                             Command="{Binding AddPatternCommand, Source={Reference thisView}}" 
                             CommandParameter="{Binding PatternNode, Source={Reference thisView}}" />
                <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.TrashCan}" Color="Red"
                             IsVisible="{Binding PatternNode.IsMultiPattern, Source={Reference thisView}}"
                             Command="{Binding DeletePatternCommand, Source={Reference thisView}}">
                    <v:ImageView.CommandParameter>
                        <MultiBinding Converter="{conv:PassThroughConverter}">
                            <Binding Path="Pattern" Source="{Reference thisView}" />
                            <Binding Path="PatternNode" Source="{Reference thisView}" />
                        </MultiBinding>
                    </v:ImageView.CommandParameter>
                </v:ImageView>
            </HorizontalStackLayout>
        </VerticalStackLayout>
    </Grid>
</ContentView>
