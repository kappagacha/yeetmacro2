<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="YeetMacro2.Views.SettingNodeView"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:nvm="clr-namespace:YeetMacro2.ViewModels.NodeViewModels"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:m="clr-namespace:YeetMacro2.Data.Models"
             x:DataType="vm:MacroManagerViewModel"
             vm:ViewModelLocator.ViewModelType="{x:Type vm:MacroManagerViewModel}"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
             BackgroundColor="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource BackgroundDark}}"
             x:Name="thisView">
    <ContentView.Resources>
        <DataTemplate x:Key="SharedTemplate" x:DataType="m:Node">
            <FlexLayout JustifyContent="SpaceBetween">
                <HorizontalStackLayout Spacing="5">
                    <Grid>
                        <Label Text="{Binding Name}" TextColor="{StaticResource Primary}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                            <Label.Triggers>
                                <DataTrigger TargetType="{x:Type Label}" Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="Background" Value="Blue" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}" 
                            Command="{Binding BindingContext.Settings.SelectNodeCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}" />
                    </Grid>
                    <ContentPresenter Grid.Column="1" x:Name="contentPresenter" BindingContext="{Binding .}" />
                </HorizontalStackLayout>
                <v:ImageView
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                    Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                    CommandParameter="{Binding .}" />
            </FlexLayout>
        </DataTemplate>
        <DataTemplate x:Key="ParentSettingTemplate" x:DataType="nvm:ParentSettingViewModel">
            <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto" ColumnSpacing="5">
                <Grid WidthRequest="15" />
                <v:ToggleImageView Grid.Row="0" Grid.Column="0"
                       IsVisible="{Binding Nodes.Count, Converter={conv:NumberToBoolConverter}}"
                       ImageHeight="15"
                       ImageWidth="15"
                       FontFamily="MaterialOutlined" 
                       Glyph="{x:Static mi:MaterialOutlined.Keyboard_arrow_right}"
                       ToggledGlyph="{x:Static mi:MaterialOutlined.Keyboard_arrow_down}"
                       IsToggled="{Binding IsExpanded}"
                       IsToggledFromImageOnly="True"
                       HeightRequest="20" />
                <Grid Grid.Row="0" Grid.Column="1" HeightRequest="20">
                    <Grid HeightRequest="20">
                        <Label Text="{Binding Name}" TextColor="{StaticResource Primary}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                            <Label.Triggers>
                                <DataTrigger TargetType="{x:Type Label}" Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="Background" Value="Blue" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}" 
                            Command="{Binding NodeManager.SelectNodeCommand, Source={RelativeSource AncestorType={x:Type v:NodeView}}}" />
                    </Grid>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="1" IsVisible="{Binding Nodes.Count, Converter={conv:NumberToBoolConverter}}">
                    <CollectionView Margin="15,0,0,0" ItemsSource="{Binding Nodes}" IsVisible="{Binding IsExpanded}"
                                    ItemTemplate="{conv:DynamicTemplateSelector Root={Binding .,Source={Reference thisView}}}" />
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="BooleanSettingTemplate" x:DataType="nvm:BooleanSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <CheckBox IsChecked="{Binding Value}" VerticalOptions="Center" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="OptionSettingTemplate" x:DataType="nvm:OptionSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="{x:Type m:OptionSetting}">
                        <HorizontalStackLayout Spacing="5">
                            <Grid>
                                <Label Margin="0" Padding="0" Text="{Binding Value}" VerticalOptions="Center" />
                                <ImageButton Margin="0" Padding="0"
                                    Command="{Binding BindingContext.Settings.SelectOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                                    CommandParameter="{Binding .}" />
                            </Grid>
                            <v:ImageView
                                VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Add}"
                                Command="{Binding BindingContext.Settings.AddOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                                CommandParameter="{Binding .}" />
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="EnabledOptionSettingTemplate" x:DataType="nvm:EnabledOptionSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}" x:DataType="nvm:EnabledOptionSettingViewModel">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <HorizontalStackLayout Spacing="5">
                            <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                            <Grid>
                                <Label Margin="0" Padding="0" Text="{Binding Value}" VerticalOptions="Center" />
                                <ImageButton Margin="0" Padding="0"
                                    Command="{Binding BindingContext.Settings.SelectOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                                    CommandParameter="{Binding .}" />
                            </Grid>
                            <v:ImageView
                                VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Add}"
                                Command="{Binding BindingContext.Settings.AddOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                                CommandParameter="{Binding .}" />
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="StringSettingTemplate" x:DataType="nvm:StringSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <Entry VerticalOptions="Center" Text="{Binding Value}" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="EnabledStringSettingTemplate" x:DataType="nvm:EnabledStringSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <HorizontalStackLayout>
                            <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                            <Entry VerticalOptions="Center" Text="{Binding Value}" />
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="IntegerSettingTemplate" x:DataType="nvm:IntegerSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <v:IntegerStepper Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="EnabledIntegerSettingTemplate" x:DataType="nvm:EnabledIntegerSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <HorizontalStackLayout>
                            <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                            <v:IntegerStepper Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="DoubleSettingTemplate" x:DataType="nvm:DoubleSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <v:DoubleStepper Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="EnabledDoubleSettingTemplate" x:DataType="nvm:EnabledDoubleSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <HorizontalStackLayout>
                            <CheckBox mct:DockLayout.DockPosition="Left" IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                            <v:DoubleStepper Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="PatternSettingTemplate" x:DataType="nvm:PatternSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}" />
        </DataTemplate>
        <DataTemplate x:Key="EnabledPatternSettingTemplate" x:DataType="nvm:EnabledPatternSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="TimestampSettingTemplate" x:DataType="nvm:TimestampSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate>
                        <Label Margin="0" Padding="0" VerticalOptions="Center" Text="{Binding LocalValue, StringFormat=' {0:MM/dd/yyyy hh:mm tt}'}" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
    </ContentView.Resources>
    <Grid ColumnDefinitions="*">
        <Grid.Triggers>
            <DataTrigger TargetType="Grid" Binding="{Binding Settings.SelectedPatternNode, Converter={conv:NullToBoolConverter IsInverse=True}}" Value="True">
                <Setter Property="ColumnDefinitions" Value="*,3*" />
            </DataTrigger>
        </Grid.Triggers>
        <Border Grid.Column="0" Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3">
            <v:NodeView NodeManager="{Binding Settings}" IsMenuVisible="{Binding IsSubView, Converter={conv:InverseBoolConverter}, Source={Reference thisView}}"
                        ItemTemplate="{conv:DynamicTemplateSelector Root={Binding .,Source={Reference thisView}}}">
                <v:NodeView.Triggers>
                    <DataTrigger TargetType="{x:Type v:NodeView}" Binding="{Binding IsSubView, Source={Reference thisView}}" Value="True">
                        <Setter Property="ItemsSource" Value="{Binding Settings.CurrentSubViewModel.Nodes}" />
                    </DataTrigger>
                </v:NodeView.Triggers>
            </v:NodeView>
        </Border>
        <Border Grid.Column="1" Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3"
                IsVisible="{Binding Settings.SelectedPatternNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
            <v:PatternView 
                PatternNode="{Binding Settings.SelectedPatternNode}"
                Pattern="{Binding Settings.SelectedPattern}"
                SavePatternCommand="{Binding Patterns.SavePatternCommand}"
                SelectPatternCommand="{Binding Settings.SelectPatternCommand}"
                CapturePatternCommand="{Binding Patterns.CapturePatternCommand}"
                SetPatternBoundsCommand="{Binding Patterns.SetPatternBoundsCommand}"
                ClickPatternCommand="{Binding Patterns.ClickPatternCommand}"
                TestPatternCommand="{Binding Patterns.TestPatternCommand}"
                AddPatternCommand="{Binding Patterns.AddPatternCommand}"
                DeletePatternCommand="{Binding Patterns.DeletePatternCommand}"
                ApplyColorThresholdCommand="{Binding Patterns.ApplyColorThresholdCommand}"
                TestPatternTextMatchCommand="{Binding Patterns.TestPatternTextMatchCommand}"
                ApplyPatternTextMatchCommand="{Binding Patterns.ApplyPatternTextMatchCommand}" />
        </Border>
    </Grid>
</ContentView>
