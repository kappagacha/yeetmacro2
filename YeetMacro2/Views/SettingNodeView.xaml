<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="YeetMacro2.Views.SettingNodeView"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:nvm="clr-namespace:YeetMacro2.ViewModels.NodeViewModels"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:m="clr-namespace:YeetMacro2.Data.Models"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:ms="clr-namespace:UraniumUI.Icons.MaterialSymbols;assembly=UraniumUI.Icons.MaterialSymbols"
             xmlns:vlv="clr-namespace:Microsoft.Maui.Controls;assembly=VirtualListView"
             BackgroundColor="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource BackgroundDark}}"
             x:Name="thisView">
    <ContentView.Resources>
        <DataTemplate x:Key="SharedTemplate" x:DataType="m:Node">
            <FlexLayout JustifyContent="SpaceBetween" HeightRequest="{Binding Height}">
                <HorizontalStackLayout Spacing="5">
                    <Grid>
                        <Label Text="{Binding Name}" TextColor="{StaticResource Primary}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="BackgroundColor" Value="Blue" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}" 
                            Command="{Binding MacroSet.Settings.SelectNodeCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
                    </Grid>
                    <ContentPresenter Grid.Column="1" x:Name="contentPresenter" BindingContext="{Binding .}" />
                </HorizontalStackLayout>
                <v:ImageView CommandParameter="{Binding .}"
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static ms:MaterialOutlined.Refresh}"
                    IsVisible="{Binding MacroSet.Settings.ShowResetButton, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}"
                    Command="{Binding MacroSet.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
            </FlexLayout>
        </DataTemplate>
        <DataTemplate x:Key="ParentSettingTemplate" x:DataType="nvm:ParentSettingViewModel">
            <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto" ColumnSpacing="5">
                <Grid WidthRequest="15" />
                <v:ToggleImageView Grid.Row="0" Grid.Column="0"
                       IsVisible="{Binding Nodes.Count, Converter={conv:NumberToBoolConverter}}"
                       ImageHeight="15"
                       ImageWidth="15"
                       FontFamily="MaterialOutlined" 
                       Glyph="{x:Static ms:MaterialOutlined.Keyboard_arrow_right}"
                       ToggledGlyph="{x:Static ms:MaterialOutlined.Keyboard_arrow_down}"
                       IsToggled="{Binding IsExpanded}"
                       IsToggledFromImageOnly="True"
                       HeightRequest="20" />
                <Grid Grid.Row="0" Grid.Column="1" HeightRequest="20">
                    <Grid HeightRequest="20">
                        <Label Text="{Binding Name}" TextColor="{StaticResource Primary}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="BackgroundColor" Value="Blue" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}"
                            Command="{Binding MacroSet.Settings.SelectNodeCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
                    </Grid>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="1" IsVisible="{Binding Nodes.Count, Converter={conv:NumberToBoolConverter}}">
                    <!--<CollectionView Margin="15,0,0,0" ItemsSource="{Binding Nodes}" IsVisible="{Binding IsExpanded}"
                                    ItemTemplate="{conv:DynamicTemplateSelector}" />-->
                    <vlv:VirtualListView Margin="15,0,0,0" Adapter="{Binding Nodes}" IsVisible="{Binding IsExpanded}"
                                    ItemTemplateSelector="{conv:VirtualDynamicTemplateSelector}" HeightRequest="{Binding NodesHeight}" />
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="EnabledParentSettingTemplate" x:DataType="nvm:EnabledParentSettingViewModel">
            <Grid ColumnDefinitions="Auto,Auto,*" ColumnSpacing="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Height}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid WidthRequest="15" />
                <v:ToggleImageView Grid.Row="0" Grid.Column="0"
                       IsVisible="{Binding Nodes.Count, Converter={conv:NumberToBoolConverter}}"
                       ImageHeight="15"
                       ImageWidth="15"
                       FontFamily="MaterialOutlined" 
                       Glyph="{x:Static ms:MaterialOutlined.Keyboard_arrow_right}"
                       ToggledGlyph="{x:Static ms:MaterialOutlined.Keyboard_arrow_down}"
                       IsToggled="{Binding IsExpanded}"
                       IsToggledFromImageOnly="True"
                       HeightRequest="20" />
                <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                <Grid Grid.Row="0" Grid.Column="2" HeightRequest="20">
                    <Grid HeightRequest="20">
                        <Label Text="{Binding Name}" TextColor="{StaticResource Primary}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="BackgroundColor" Value="Blue" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}" 
                            Command="{Binding MacroSet.Settings.SelectNodeCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
                    </Grid>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" IsVisible="{Binding Nodes.Count, Converter={conv:NumberToBoolConverter}}">
                    <!--<CollectionView Margin="15,0,0,0" ItemsSource="{Binding Nodes}" IsVisible="{Binding IsExpanded}"
                                    ItemTemplate="{conv:DynamicTemplateSelector}" />-->
                    <vlv:VirtualListView Margin="15,0,0,0" Adapter="{Binding Nodes}" IsVisible="{Binding IsExpanded}"
                                    ItemTemplateSelector="{conv:VirtualDynamicTemplateSelector}" HeightRequest="{Binding NodesHeight}" />
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="BooleanSettingTemplate" x:DataType="nvm:BooleanSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:BooleanSettingViewModel">
                        <CheckBox IsChecked="{Binding Value}" VerticalOptions="Center" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="OptionSettingTemplate" x:DataType="nvm:OptionSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="m:OptionSetting">
                        <HorizontalStackLayout Spacing="5">
                            <Grid>
                                <Label Margin="0" Padding="0" Text="{Binding Value}" VerticalOptions="Center" />
                                <ImageButton x:DataType="m:OptionSetting" Margin="0" Padding="0" CommandParameter="{Binding .}"
                                    Command="{Binding MacroSet.Settings.SelectOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
                            </Grid>
                            <v:ImageView x:DataType="m:OptionSetting" CommandParameter="{Binding .}"
                                VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static ms:MaterialOutlined.Edit}"
                                Command="{Binding MacroSet.Settings.EditOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
                            <v:ImageView x:DataType="m:OptionSetting" CommandParameter="{Binding .}"
                                VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static ms:MaterialOutlined.Add}" 
                                Command="{Binding MacroSet.Settings.AddOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}"  />
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="EnabledOptionSettingTemplate" x:DataType="nvm:EnabledOptionSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}" x:DataType="nvm:EnabledOptionSettingViewModel">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:EnabledOptionSettingViewModel">
                        <HorizontalStackLayout Spacing="5">
                            <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                            <Grid>
                                <Label Margin="0" Padding="0" Text="{Binding Value}" VerticalOptions="Center" />
                                <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}"
                                    Command="{Binding MacroSet.Settings.SelectOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
                            </Grid>
                            <v:ImageView
                                VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static ms:MaterialOutlined.Edit}" CommandParameter="{Binding .}" 
                                Command="{Binding MacroSet.Settings.EditOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
                            <v:ImageView
                                VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static ms:MaterialOutlined.Add}" CommandParameter="{Binding .}" 
                                Command="{Binding MacroSet.Settings.AddOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}"/>
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="StringSettingTemplate" x:DataType="nvm:StringSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:StringSettingViewModel">
                        <Entry HeightRequest="{Binding Height}" VerticalOptions="Center" Text="{Binding Value}" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="EnabledStringSettingTemplate" x:DataType="nvm:EnabledStringSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:EnabledStringSettingViewModel">
                        <HorizontalStackLayout>
                            <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                            <Entry HeightRequest="{Binding Height}" VerticalOptions="Center" Text="{Binding Value}" />
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="IntegerSettingTemplate" x:DataType="nvm:IntegerSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:IntegerSettingViewModel">
                        <v:IntegerStepper  HeightRequest="{Binding Height}" Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="EnabledIntegerSettingTemplate" x:DataType="nvm:EnabledIntegerSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:EnabledIntegerSettingViewModel">
                        <HorizontalStackLayout>
                            <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                            <v:IntegerStepper HeightRequest="{Binding Height}" Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="DoubleSettingTemplate" x:DataType="nvm:DoubleSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:DoubleSettingViewModel">
                        <v:DoubleStepper HeightRequest="{Binding Height}" Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="EnabledDoubleSettingTemplate" x:DataType="nvm:EnabledDoubleSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:EnabledDoubleSettingViewModel">
                        <HorizontalStackLayout>
                            <CheckBox mct:DockLayout.DockPosition="Left" IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                            <v:DoubleStepper  HeightRequest="{Binding Height}" Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
                        </HorizontalStackLayout>
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="PatternSettingTemplate" x:DataType="nvm:PatternSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}" />
        </DataTemplate>
        <DataTemplate x:Key="EnabledPatternSettingTemplate" x:DataType="nvm:EnabledPatternSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:EnabledPatternSettingViewModel">
                        <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
        <DataTemplate x:Key="TimestampSettingTemplate" x:DataType="nvm:TimestampSettingViewModel">
            <v:DataTemplateView DataTemplate="{StaticResource SharedTemplate}">
                <v:DataTemplateView.ContentTemplate>
                    <DataTemplate x:DataType="nvm:TimestampSettingViewModel">
                        <Label Margin="0" Padding="0" VerticalOptions="Center" Text="{Binding LocalValue, StringFormat=' {0:MM/dd/yyyy hh:mm tt}'}" />
                    </DataTemplate>
                </v:DataTemplateView.ContentTemplate>
            </v:DataTemplateView>
        </DataTemplate>
    </ContentView.Resources>
    <Grid ColumnDefinitions="*">
        <Grid.Triggers>
            <DataTrigger TargetType="Grid" Binding="{Binding MacroSet.Settings.SelectedPatternNode, x:DataType=v:SettingNodeView, Source={Reference thisView}, Converter={conv:NullToBoolConverter IsInverse=True}}" Value="True">
                <Setter Property="ColumnDefinitions" Value="*,3*" />
            </DataTrigger>
        </Grid.Triggers>
        <Border Grid.Column="0" Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3">
            <v:SettingCoreNodeView NodeManager="{Binding MacroSet.Settings, Source={Reference thisView}, x:DataType=v:SettingNodeView}" IsMenuVisible="{Binding SubView, Source={Reference thisView}, x:DataType=v:SettingNodeView, Converter={conv:NullToBoolConverter}}"
                        ItemTemplateSelector="{conv:VirtualDynamicTemplateSelector Root={Binding ., Source={Reference thisView}, x:DataType=v:SettingNodeView}}">
                <v:SettingCoreNodeView.Triggers>
                    <DataTrigger TargetType="{x:Type v:SettingCoreNodeView}" Binding="{Binding SubView, Source={Reference thisView}, x:DataType=v:SettingNodeView, Converter={conv:NullToBoolConverter IsInverse=True}}" Value="True">
                        <Setter Property="ItemsSource" Value="{Binding SubView.Nodes, x:DataType=v:SettingNodeView, Source={Reference thisView}}" />
                    </DataTrigger>
                </v:SettingCoreNodeView.Triggers>
                <v:SettingCoreNodeView.ExtraMenuItemsDataTemplate>
                    <DataTemplate x:DataType="v:SettingCoreNodeView">
                        <VerticalStackLayout>
                            <v:ImageView IsVisible="{Binding MacroSet.Settings.SelectedNode, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView, Converter={conv:NullToBoolConverter}}"
                                         FontFamily="FASolid" Glyph="{x:Static fa:Solid.FileImport}"
                                         Command="{Binding  MacroSet.Settings.ImportSettingsCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
                            <v:ImageView IsVisible="{Binding MacroSet.Settings.SelectedNode, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView, Converter={conv:NullToBoolConverter}}"
                                         FontFamily="FASolid" Glyph="{x:Static fa:Solid.FileExport}" 
                                         Command="{Binding  MacroSet.Settings.ExportCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}"
                                         CommandParameter="{Binding MacroSet.Name, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}" />
                            <Grid>
                                <v:ToggleImageView x:DataType="v:SettingNodeView" FontFamily="MaterialOutlined" Glyph="{x:Static ms:MaterialOutlined.Refresh}" ToggledColor="{StaticResource Primary}" 
                                                   IsToggled="{Binding MacroSet.Settings.ShowResetButton, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}"/>
                                <v:ToggleImageView x:DataType="v:SettingNodeView" FontFamily="FASolid" Glyph="{x:Static fa:Solid.Eye}" ToggledColor="{StaticResource Primary}" 
                                                   IsToggled="{Binding MacroSet.Settings.ShowResetButton, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}, x:DataType=v:SettingNodeView}"
                                                   Scale=".5"/>
                            </Grid>
                        </VerticalStackLayout>
                    </DataTemplate>
                </v:SettingCoreNodeView.ExtraMenuItemsDataTemplate>
            </v:SettingCoreNodeView>
        </Border>
        <Border Grid.Column="1" Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3"
                IsVisible="{Binding MacroSet.Settings.SelectedPatternNode, Source={Reference thisView}, x:DataType=v:SettingNodeView, Converter={conv:NullToBoolConverter IsInverse=True}}">
            <Grid>
                <v:PatternView x:DataType="v:SettingNodeView"
                    PatternNode="{Binding MacroSet.Settings.SelectedPatternNode, Source={Reference thisView}}"
                    Pattern="{Binding MacroSet.Settings.SelectedPattern, Source={Reference thisView}}"
                    SavePatternCommand="{Binding MacroSet.Patterns.SavePatternCommand, Source={Reference thisView}}"
                    SelectPatternCommand="{Binding MacroSet.Settings.SelectPatternCommand, Source={Reference thisView}}"
                    CapturePatternCommand="{Binding MacroSet.Patterns.CapturePatternCommand, Source={Reference thisView}}"
                    SetPatternBoundsCommand="{Binding MacroSet.Patterns.SetPatternBoundsCommand, Source={Reference thisView}}"
                    NormalizePatternCommand="{Binding MacroSet.Patterns.NormalizePatternCommand, Source={Reference thisView}}"
                    ClickPatternCommand="{Binding MacroSet.Patterns.ClickPatternCommand, Source={Reference thisView}}"
                    TestPatternCommand="{Binding MacroSet.Patterns.TestPatternCommand, Source={Reference thisView}}"
                    AddPatternCommand="{Binding MacroSet.Patterns.AddPatternCommand, Source={Reference thisView}}"
                    DeletePatternCommand="{Binding MacroSet.Patterns.DeletePatternCommand, Source={Reference thisView}}"
                    ApplyColorThresholdCommand="{Binding MacroSet.Patterns.ApplyColorThresholdCommand, Source={Reference thisView}}"
                    TestPatternTextMatchCommand="{Binding MacroSet.Patterns.TestPatternTextMatchCommand, Source={Reference thisView}}"
                    ApplyPatternTextMatchCommand="{Binding MacroSet.Patterns.ApplyPatternTextMatchCommand, Source={Reference thisView}}"
                    ApplyPatternOffsetCommand="{Binding MacroSet.Patterns.ApplyPatternOffsetCommand, Source={Reference thisView}}"
                    TestSwipeCommand="{Binding MacroSet.Patterns.TestSwipeCommand, Source={Reference thisView}}" />
                <Label Text="{Binding MacroSet.Settings.SelectedPatternNode.NodeId, Source={Reference thisView}, x:DataType=v:SettingNodeView, StringFormat='NodeId: {0}'}" HorizontalOptions="End" VerticalOptions="Start" />
            </Grid>
        </Border>
    </Grid>
</ContentView>
