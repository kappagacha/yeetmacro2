<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="YeetMacro2.Views.SettingNodeView"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:m="clr-namespace:YeetMacro2.Data.Models"
             x:DataType="vm:MacroManagerViewModel"
             vm:ViewModelLocator.ViewModelType="{x:Type vm:MacroManagerViewModel}"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
             BackgroundColor="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource BackgroundDark}}"
             x:Name="thisView">
    <ContentView.Resources>
        <DataTemplate x:Key="ParentSettingTemplate" x:DataType="{x:Type vm:MacroSetViewModel}" />
        <DataTemplate x:Key="BooleanSettingTemplate">
            <FlexLayout JustifyContent="SpaceBetween">
                <CheckBox IsChecked="{Binding Value}" VerticalOptions="Center" />
                <v:ImageView
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                    Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                    CommandParameter="{Binding .}" />
            </FlexLayout>
        </DataTemplate>
        <DataTemplate x:Key="OptionSettingTemplate">
            <FlexLayout JustifyContent="SpaceBetween">
                <HorizontalStackLayout>
                    <Label Margin="0" Padding="0" VerticalOptions="Center" Text=": " />
                    <Grid>
                        <Label Margin="0" Padding="0" Text="{Binding Value}" VerticalOptions="Center" />
                        <ImageButton Margin="0" Padding="0"
                            Command="{Binding BindingContext.Settings.SelectOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                            CommandParameter="{Binding .}" />
                    </Grid>
                    <v:ImageView
                        VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Add}"
                        Command="{Binding BindingContext.Settings.AddOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                        CommandParameter="{Binding .}" />
                </HorizontalStackLayout>
                <v:ImageView
                         VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                         Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                         CommandParameter="{Binding .}" />
            </FlexLayout>
        </DataTemplate>
        <DataTemplate x:Key="EnabledOptionSettingTemplate">
            <FlexLayout JustifyContent="SpaceBetween">
                <HorizontalStackLayout>
                    <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                    <Grid>
                        <Label Margin="0" Padding="0" Text="{Binding Value}" VerticalOptions="Center" />
                        <ImageButton Margin="0" Padding="0"
                            Command="{Binding BindingContext.Settings.SelectOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                            CommandParameter="{Binding .}" />
                    </Grid>
                    <v:ImageView
                        VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Add}"
                        Command="{Binding BindingContext.Settings.AddOptionCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                        CommandParameter="{Binding .}" />
                </HorizontalStackLayout>
                <v:ImageView
                 VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                 Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                 CommandParameter="{Binding .}" />
            </FlexLayout>
        </DataTemplate>
        <DataTemplate x:Key="StringSettingTemplate">
            <FlexLayout JustifyContent="SpaceBetween">
                <Entry VerticalOptions="Center" Text="{Binding Value}" />
                <v:ImageView
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                    Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                    CommandParameter="{Binding .}" />
            </FlexLayout>
        </DataTemplate>
        <DataTemplate x:Key="EnabledStringSettingTemplate">
            <FlexLayout JustifyContent="SpaceBetween">
                <HorizontalStackLayout>
                    <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                    <Entry VerticalOptions="Center" Text="{Binding Value}" />
                </HorizontalStackLayout>
                <v:ImageView
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                    Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                    CommandParameter="{Binding .}" />
            </FlexLayout>
        </DataTemplate>
        <DataTemplate x:Key="IntegerSettingTemplate">
            <mct:DockLayout>
                <v:ImageView mct:DockLayout.DockPosition="Right"
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                    Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                    CommandParameter="{Binding .}" />
                <v:IntegerStepper Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
            </mct:DockLayout>
        </DataTemplate>
        <DataTemplate x:Key="EnabledIntegerSettingTemplate">
            <mct:DockLayout>
                <CheckBox mct:DockLayout.DockPosition="Left" IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                <v:ImageView mct:DockLayout.DockPosition="Right"
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                    Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                    CommandParameter="{Binding .}" />
                <v:IntegerStepper Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
            </mct:DockLayout>
        </DataTemplate>
        <DataTemplate x:Key="DoubleSettingTemplate">
            <mct:DockLayout>
                <v:ImageView mct:DockLayout.DockPosition="Right"
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                    Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                    CommandParameter="{Binding .}" />
                <v:DoubleStepper Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
            </mct:DockLayout>
        </DataTemplate>
        <DataTemplate x:Key="EnabledDoubleSettingTemplate">
            <mct:DockLayout>
                <CheckBox mct:DockLayout.DockPosition="Left" IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
                <v:ImageView mct:DockLayout.DockPosition="Right"
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                    Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                    CommandParameter="{Binding .}" />
                <v:DoubleStepper Value="{Binding Value}" ShowIncrement="True" Increment="{Binding Increment}" />
            </mct:DockLayout>
        </DataTemplate>
        <DataTemplate x:Key="PatternSettingTemplate">
            <v:ImageView HorizontalOptions="End"
                VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                CommandParameter="{Binding .}" />
        </DataTemplate>
        <DataTemplate x:Key="EnabledPatternSettingTemplate">
            <mct:DockLayout>
                <v:ImageView mct:DockLayout.DockPosition="Right"
                    VerticalOptions="Center" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Refresh}"
                    Command="{Binding BindingContext.Settings.ResetSettingCommand, Source={RelativeSource AncestorType={x:Type v:SettingNodeView}}}"
                    CommandParameter="{Binding .}" />
                <CheckBox IsChecked="{Binding IsEnabled}" VerticalOptions="Center" />
            </mct:DockLayout>
        </DataTemplate>
        <DataTemplate x:Key="TimestampSettingTemplate">
            <Label Margin="0" Padding="0" VerticalOptions="Center" Text="{Binding LocalValue, StringFormat=' {0:MM/dd/yyyy hh:mm tt}'}" />
        </DataTemplate>
    </ContentView.Resources>
    <Grid ColumnDefinitions="*">
        <Grid.Triggers>
            <DataTrigger TargetType="Grid" Binding="{Binding Settings.SelectedPatternNode, Converter={conv:NullToBoolConverter IsInverse=True}}" Value="True">
                <Setter Property="ColumnDefinitions" Value="*,3*" />
            </DataTrigger>
        </Grid.Triggers>
        <Border Grid.Column="0" Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3">
            <v:NodeView NodeManager="{Binding Settings}" IsMenuVisible="{Binding IsSubView, Converter={conv:InverseBoolConverter}, Source={Reference thisView}}">
                <v:NodeView.Triggers>
                    <DataTrigger TargetType="{x:Type v:NodeView}" Binding="{Binding IsSubView, Source={Reference thisView}}" Value="True">
                        <Setter Property="ItemsSource" Value="{Binding Settings.CurrentSubViewModel.Nodes}" />
                    </DataTrigger>
                </v:NodeView.Triggers>
                <v:NodeView.ItemTemplate>
                    <DataTemplate x:DataType="{x:Type m:SettingNode}">
                        <Grid ColumnDefinitions="Auto,*">
                            <Grid.Triggers>
                                <DataTrigger TargetType="{x:Type Grid}" Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="Background" Value="Blue" />
                                </DataTrigger>
                                <DataTrigger TargetType="{x:Type Grid}" Binding="{Binding SettingType}" Value="{x:Static m:SettingType.Parent}">
                                    <Setter Property="HeightRequest" Value="{StaticResource IconHeight}" />
                                </DataTrigger>
                                <DataTrigger TargetType="{x:Type Grid}" Binding="{Binding SettingType}" Value="{x:Static m:SettingType.TimeStamp}">
                                    <Setter Property="HeightRequest" Value="{StaticResource IconHeight}" />
                                </DataTrigger>
                            </Grid.Triggers>
                            <Label Grid.Column="0" Text="{Binding Name}" VerticalOptions="Center" />
                            <ImageButton Grid.Column="0" Margin="0" Padding="0" CommandParameter="{Binding .}" Command="{Binding NodeManager.SelectNodeCommand, Source={RelativeSource AncestorType={x:Type v:NodeView}}}" />
                            <CollectionView Grid.Column="1" SelectionMode="None"
                                            ItemTemplate="{conv:DynamicTemplateSelector Root={Binding .,Source={Reference thisView}}}">
                                <CollectionView.ItemsSource>
                                    <MultiBinding Converter="{conv:PassThroughConverter}">
                                        <Binding Path="." />
                                    </MultiBinding>
                                </CollectionView.ItemsSource>
                            </CollectionView>
                        </Grid>
                    </DataTemplate>
                </v:NodeView.ItemTemplate>
            </v:NodeView>
        </Border>
        <Border Grid.Column="1" Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3"
                IsVisible="{Binding Settings.SelectedPatternNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
            <v:PatternView 
                PatternNode="{Binding Settings.SelectedPatternNode}"
                Pattern="{Binding Settings.SelectedPattern}"
                SavePatternCommand="{Binding Patterns.SavePatternCommand}"
                SelectPatternCommand="{Binding Settings.SelectPatternCommand}"
                CapturePatternCommand="{Binding Patterns.CapturePatternCommand}"
                SetPatternBoundsCommand="{Binding Patterns.SetPatternBoundsCommand}"
                ClickPatternCommand="{Binding Patterns.ClickPatternCommand}"
                TestPatternCommand="{Binding Patterns.TestPatternCommand}"
                AddPatternCommand="{Binding Patterns.AddPatternCommand}"
                DeletePatternCommand="{Binding Patterns.DeletePatternCommand}"
                ApplyColorThresholdCommand="{Binding Patterns.ApplyColorThresholdCommand}"
                TestPatternTextMatchCommand="{Binding Patterns.TestPatternTextMatchCommand}"
                ApplyPatternTextMatchCommand="{Binding Patterns.ApplyPatternTextMatchCommand}" />
        </Border>
    </Grid>
</ContentView>
