<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:m="clr-namespace:YeetMacro2.Data.Models"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             x:Class="YeetMacro2.Views.TreeView"
             x:Name="thisView">
    <ContentView.Resources>
        <DataTemplate x:Key="DefaultItemTemplate">
            <Label Text="{Binding Name}" TextColor="{StaticResource PrimaryDark}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                <Label.Triggers>
                    <DataTrigger TargetType="{x:Type Label}" Binding="{Binding IsSelected}" Value="True">
                        <Setter Property="BackgroundColor" Value="Blue" />
                    </DataTrigger>
                </Label.Triggers>
                <Label.GestureRecognizers>
                    <TapGestureRecognizer CommandParameter="{Binding .}" Command="{Binding ItemsSource.SelectNodeCommand, Source={RelativeSource AncestorType={x:Type v:TreeView}}}" />
                </Label.GestureRecognizers>
            </Label>
        </DataTemplate>
    </ContentView.Resources>
    <Grid>
        <ScrollView>
            <material:TreeView ItemsSource="{Binding ItemsSource.Root.Children, Source={Reference thisView}}"
                               ItemTemplate="{Binding ItemTemplate, Source={Reference thisView}, TargetNullValue={StaticResource DefaultItemTemplate}}"
                               Spacing="0" HorizontalOptions="Fill"  VerticalOptions="Fill" />
        </ScrollView>
        <Grid VerticalOptions="End" HorizontalOptions="End" BindingContext="{Binding ., Source={Reference thisView}}">
            <VerticalStackLayout>
                <VerticalStackLayout IsVisible="{Binding IsMenuOpen}">
                    <ContentView x:Name="extraMenuItemsContentView" />
                    <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.TrashCan}" Color="Red" 
                                 IsVisible="{Binding ItemsSource.SelectedNode, Converter={conv:NullToBoolConverter IsInverse=True}}"
                                 Command="{Binding ItemsSource.DeleteNodeCommand}" CommandParameter="{Binding ItemsSource.SelectedNode}" />
                    <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.Plus}" Command="{Binding ItemsSource.AddNodeCommand}"
                                 IsVisible="{Binding ItemsSource.SelectedNode.IsParentNode}"/>
                </VerticalStackLayout>
                <Border Stroke="{StaticResource Primary}" StrokeThickness="0">
                    <Border.Triggers>
                        <DataTrigger TargetType="Border" Binding="{Binding IsMenuOpen}" Value="True">
                            <Setter Property="StrokeThickness" Value="1" />
                        </DataTrigger>
                    </Border.Triggers>
                    <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.Bars}"
                             Command="{Binding ToggleIsMenuOpenCommand}" />
                </Border>
            </VerticalStackLayout>
        </Grid>
    </Grid>
</ContentView>
