<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:m="clr-namespace:YeetMacro2.Data.Models"
             BackgroundColor="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource BackgroundDark}}"
             x:DataType="vm:MacroSetViewModel"
             x:Class="YeetMacro2.Views.ScriptNodeView"
             x:Name="thisControl">
    <Grid>
        <Grid ColumnDefinitions="*,3*">
            <Border Grid.Column="0" Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3">
                <v:ScriptCoreNodeView x:Name="scriptCoreNodeView" NodeManager="{Binding Scripts}">
                    <v:ScriptCoreNodeView.ExpanderTemplate>
                        <DataTemplate>
                            <Grid />
                        </DataTemplate>
                    </v:ScriptCoreNodeView.ExpanderTemplate>
                    <v:ScriptCoreNodeView.ExtraMenuItemsDataTemplate>
                        <DataTemplate x:DataType="v:ScriptCoreNodeView">
                            <VerticalStackLayout>
                                <v:ToggleImageView FontFamily="MaterialOutlined" IsToggled="{Binding MacroSet.Scripts.ShowHiddenScripts, Source={RelativeSource AncestorType={x:Type v:ScriptNodeView}}, x:DataType=v:ScriptNodeView}"
                                                   UntoggledGlyph="{x:Static mi:MaterialOutlined.Visibility_off}" 
                                                   ToggledGlyph="{x:Static mi:MaterialOutlined.Visibility}" />
                                <v:ToggleImageView IsVisible="{Binding MacroSet.Scripts.SelectedNode, Source={RelativeSource AncestorType={x:Type v:ScriptNodeView}}, x:DataType=v:ScriptNodeView, Converter={conv:NullToBoolConverter IsInverse=True}}"
                                                   IsToggled="{Binding MacroSet.Scripts.SelectedNode.IsFavorite, Source={RelativeSource AncestorType={x:Type v:ScriptNodeView}}, x:DataType=v:ScriptNodeView}"
                                                   HorizontalOptions="End" VerticalOptions="Center"
                                                   FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Star}" ToggledColor="Yellow" />
                            </VerticalStackLayout>
                        </DataTemplate>
                    </v:ScriptCoreNodeView.ExtraMenuItemsDataTemplate>
                    <v:ScriptCoreNodeView.ItemTemplate>
                        <DataTemplate x:DataType="m:ScriptNode">
                            <Grid HeightRequest="20">
                                <Grid.Triggers>
                                    <MultiTrigger TargetType="Grid">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding IsHidden}" Value="True" />
                                            <BindingCondition Binding="{Binding MacroSet.Scripts.ShowHiddenScripts, Source={RelativeSource AncestorType={x:Type v:ScriptNodeView}}, x:DataType=v:ScriptNodeView}" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter Property="IsVisible" Value="False" />
                                            <Setter Property="HeightRequest" Value="0" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </Grid.Triggers>
                                <Label Text="{Binding Name}" TextColor="{StaticResource Primary}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                                    <Label.Triggers>
                                        <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                                            <Setter Property="BackgroundColor" Value="Blue" />
                                        </DataTrigger>
                                    </Label.Triggers>
                                </Label>
                                <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}" 
                                             Command="{Binding NodeManager.SelectNodeCommand, Source={Reference scriptCoreNodeView}, x:DataType=v:ScriptCoreNodeView}" />
                                <v:ToggleImageView x:DataType="m:ScriptNode" IsVisible="{Binding IsFavorite}" HorizontalOptions="End" VerticalOptions="Center" ImageHeight="10" ImageWidth="10"
                                                   FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Star}" Color="Yellow" />
                            </Grid>
                        </DataTemplate>
                    </v:ScriptCoreNodeView.ItemTemplate>
                </v:ScriptCoreNodeView>
            </Border>
            <Grid Grid.Column="1"  BackgroundColor="Transparent" Padding="3" IsVisible="{Binding Scripts.ShowScriptEditor}">
                <mct:DockLayout IsVisible="{Binding Scripts.SelectedNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
                    <HorizontalStackLayout Spacing="5" mct:DockLayout.DockPosition="Top" HeightRequest="35">
                        <Label Text="Position:" VerticalOptions="Center" />
                        <v:IntegerStepper Value="{Binding Scripts.SelectedNode.Position}" />
                    </HorizontalStackLayout>
                    <Border Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3">
                        <Editor x:Name="scriptEditor" Text="{Binding Scripts.SelectedNode.Text}" IsSpellCheckEnabled="False" />
                    </Border>
                </mct:DockLayout>
                <HorizontalStackLayout HorizontalOptions="End" VerticalOptions="End" Margin="0,0,55,0">
                    <Grid>
                        <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Content_paste}" />
                        <ImageButton Clicked="ScriptEditor_LoadFromFile" />
                    </Grid>
                    <Grid>
                        <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Select_all}" />
                        <ImageButton Clicked="ScriptEditor_SelectAll" />
                    </Grid>
                    <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Save}"
                                 CommandParameter="{Binding Scripts.SelectedNode}"
                                 Command="{Binding Scripts.UpdateNodeCommand}" />
                </HorizontalStackLayout>
            </Grid>
            <Grid Grid.Column="1" RowDefinitions="Auto,*,*" IsVisible="{Binding Scripts.ShowScriptEditor, Converter={conv:InverseBoolConverter}}">
                <Border Grid.Row="0" Stroke="{StaticResource Primary}" 
                            BackgroundColor="Transparent" Padding="3"
                            IsVisible="{Binding Scripts.SelectedNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
                    <mct:DockLayout BindingContext="{Binding Scripts.SelectedNode}">
                        <v:ImageView mct:DockLayout.DockPosition="Left" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Info}" />
                        <Label Text="{Binding Description}" />
                    </mct:DockLayout>
                </Border>
                <Border  Grid.Row="1" mct:DockLayout.DockPosition="Top" Stroke="{StaticResource Primary}">
                    <mct:DockLayout>
                        <v:ImageView mct:DockLayout.DockPosition="Left" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialRegular.Settings}" />
                        <!--<v:SettingNodeView MacroSet="{Binding BindingContext, Source={Reference thisControl}}" IsSubView="True"  />-->
                        <ContentPresenter x:Name="settingsContentPresenter" />
                    </mct:DockLayout>
                </Border>
                <Border  Grid.Row="2" Stroke="{StaticResource Primary}">
                    <mct:DockLayout>
                        <v:ImageView mct:DockLayout.DockPosition="Left" FontFamily="FARegular" Glyph="{x:Static fa:Regular.CalendarCheck}" />
                        <Grid>
                            <ContentPresenter x:Name="dailiesContentPresenter" />
                            <ContentPresenter x:Name="weekliesContentPresenter" />
                        </Grid>
                        <!--<Grid>
                            <v:WeeklyNodeView MacroSet="{Binding BindingContext, Source={Reference thisControl}}" IsSubView="True" IsVisible="{Binding Weeklies.CurrentSubViewModel.Children.Count, Converter={conv:NumberToBoolConverter}}" />
                            <v:DailyNodeView MacroSet="{Binding BindingContext, Source={Reference thisControl}}" IsSubView="True" IsVisible="{Binding Dailies.CurrentSubViewModel.Children.Count, Converter={conv:NumberToBoolConverter}}"/>
                        </Grid>-->
                    </mct:DockLayout>
                </Border>
            </Grid>
        </Grid>
        <Grid HorizontalOptions="End" VerticalOptions="End" IsVisible="{Binding Scripts.SelectedNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
            <v:ImageView
                 ImageHeight="60"
                 ImageWidth="60"
                 FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Play_arrow}"
                 Command="{Binding ExecuteScriptCommand}"
                 CommandParameter="{Binding Scripts.SelectedNode}"
                 IsVisible="{Binding ShowExecuteButton, Source={x:Reference thisControl}, x:DataType=v:ScriptNodeView}" />
        </Grid>
        <HorizontalStackLayout HorizontalOptions="End" VerticalOptions="Start" Margin="0,0,40,0">
            <v:ToggleImageView IsToggled="{Binding Scripts.ShowScriptEditor}" ToggledColor="{StaticResource Primary}"
                               FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Edit}" />
        </HorizontalStackLayout>
        <ActivityIndicator IsRunning="{Binding IsBusy}" />
    </Grid>
</ContentView>
