<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             vm:ViewModelLocator.ViewModelType="{x:Type vm:MacroManagerViewModel}"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             BackgroundColor="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource BackgroundDark}}"
             x:DataType="vm:MacroManagerViewModel"
             x:Class="YeetMacro2.Views.ScriptNodeView"
             x:Name="thisControl">
    <Grid>
        <v:SettingNodeView IsVisible="{Binding ShowSettings}" />
        <Grid IsVisible="{Binding ShowSettings, Converter={conv:InverseBoolConverter}}" ColumnDefinitions="*,3*">
            <Border Grid.Column="0" Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3">
                <v:NodeView NodeManager="{Binding Scripts}">
                    <v:NodeView.ExtraMenuItemsDataTemplate>
                        <DataTemplate x:DataType="{x:Null}">
                            <VerticalStackLayout>
                                <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.FileExport}" 
                                                    Command="{Binding ItemsSource.ExportCommand}"
                                                    CommandParameter="{Binding BindingContext.SelectedMacroSet.Name, Source={RelativeSource AncestorType={x:Type v:ScriptNodeView}}}" />
                            </VerticalStackLayout>
                        </DataTemplate>
                    </v:NodeView.ExtraMenuItemsDataTemplate>
                </v:NodeView>
            </Border>
            <Grid Grid.Column="1"  BackgroundColor="Transparent" Padding="3" IsVisible="{Binding Scripts.ShowScriptEditor}">
                <Border Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3"
                    IsVisible="{Binding Scripts.SelectedNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
                    <Editor x:Name="scriptEditor" Text="{Binding Scripts.SelectedNode.Text}" IsSpellCheckEnabled="False" />
                </Border>
                <HorizontalStackLayout HorizontalOptions="End" VerticalOptions="End" Margin="0,0,55,0">
                    <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Select_all}">
                        <v:ImageView.GestureRecognizers>
                            <TapGestureRecognizer Tapped="ScriptEditor_SelectAll" />
                        </v:ImageView.GestureRecognizers>
                    </v:ImageView>
                    <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Save}"
                                 Command="{Binding Scripts.SaveCommand}" />
                </HorizontalStackLayout>
            </Grid>
            <mct:DockLayout Grid.Column="1" IsVisible="{Binding Scripts.ShowScriptEditor, Converter={conv:InverseBoolConverter}}">
                <Border mct:DockLayout.DockPosition="Top" Stroke="{StaticResource Primary}" 
                            BackgroundColor="Transparent" Padding="3"
                            IsVisible="{Binding Scripts.SelectedNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
                    <Label Text="{Binding Scripts.SelectedNode.Description}" />
                </Border>
                <v:SettingNodeView IsSubView="True"  />
            </mct:DockLayout>
        </Grid>
        <Grid HorizontalOptions="End" VerticalOptions="End" IsVisible="{Binding Scripts.SelectedNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
            <v:ImageView IsVisible="{Binding ShowExecuteButton, Source={x:Reference thisControl}}"
                 ImageHeight="60"
                 ImageWidth="60"
                 FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Play_arrow}"
                 Command="{Binding ExecuteScriptCommand}"
                 CommandParameter="{Binding Scripts.SelectedNode}" />
        </Grid>
        <HorizontalStackLayout HorizontalOptions="End" VerticalOptions="Start" Margin="0,0,40,0">
            <HorizontalStackLayout HorizontalOptions="End" VerticalOptions="Start">
                <CheckBox IsChecked="{Binding PersistLogs}" />
                <Label VerticalOptions="Center" Text="Persist Logs" />
            </HorizontalStackLayout>
            <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Edit}" Color="Gray"
                         Command="{Binding Scripts.ToggleShowScriptEditorCommand}">
                <v:ImageView.Triggers>
                    <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding Scripts.ShowScriptEditor}" Value="True">
                        <Setter Property="Color" Value="{StaticResource Primary}" />
                    </DataTrigger>
                </v:ImageView.Triggers>
            </v:ImageView>
        </HorizontalStackLayout>
        <v:ImageView HorizontalOptions="Start" VerticalOptions="End" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Settings}" Color="Gray"
                     Command="{Binding ToggleShowSettingsCommand}">
            <v:ImageView.Triggers>
                <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding ShowSettings}" Value="True">
                    <Setter Property="Color" Value="{StaticResource Primary}" />
                </DataTrigger>
            </v:ImageView.Triggers>
        </v:ImageView>
        <ActivityIndicator IsRunning="{Binding IsBusy}" />
    </Grid>
</ContentView>
