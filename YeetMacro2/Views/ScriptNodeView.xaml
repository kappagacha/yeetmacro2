<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             vm:ViewModelLocator.ViewModelType="{x:Type vm:MacroManagerViewModel}"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             BackgroundColor="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource BackgroundDark}}"
             x:DataType="vm:MacroManagerViewModel"
             x:Class="YeetMacro2.Views.ScriptNodeView"
             x:Name="thisControl">
    <Grid ColumnDefinitions="*,3*">
        <Border Grid.Column="0" Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3">
            <Grid>
                <v:NodeView ItemsSource="{Binding Scripts}">
                    <v:NodeView.ExtraMenuItemsDataTemplate>
                        <DataTemplate x:DataType="{x:Null}">
                            <VerticalStackLayout>
                                <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.Download}" 
                                                Command="{Binding ItemsSource.ImportCommand}"
                                                CommandParameter="{Binding BindingContext.SelectedMacroSet.Name, Source={RelativeSource AncestorType={x:Type v:ScriptNodeView}}}" />
                                <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.FileExport}" 
                                                Command="{Binding ItemsSource.ExportCommand}"
                                                CommandParameter="{Binding BindingContext.SelectedMacroSet.Name, Source={RelativeSource AncestorType={x:Type v:ScriptNodeView}}}" />
                            </VerticalStackLayout>
                        </DataTemplate>
                    </v:NodeView.ExtraMenuItemsDataTemplate>
                </v:NodeView>
                <Grid HorizontalOptions="Start" VerticalOptions="End" RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,Auto">
                    <Switch Grid.Row="0" Grid.Column="0" IsToggled="{Binding ShowLogView, Mode=TwoWay}" />
                    <Label Grid.Row="0" Grid.Column="1" VerticalTextAlignment="Center" Text="LogView">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding ShowLogView}" Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <Switch Grid.Row="1" Grid.Column="0" IsToggled="{Binding InDebugMode, Mode=TwoWay}" />
                    <Label Grid.Row="1" Grid.Column="1" VerticalTextAlignment="Center" Text="DebugMode">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding InDebugMode}" Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                </Grid>
            </Grid>
        </Border>
        <Grid Grid.Column="1"  BackgroundColor="Transparent" Padding="3">
            <Border Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3"
                IsVisible="{Binding Scripts.SelectedNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
                <Editor Text="{Binding Scripts.SelectedNode.Text}" IsSpellCheckEnabled="False" />
            </Border>
            <HorizontalStackLayout HorizontalOptions="End" VerticalOptions="End">
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Save}"
                             Command="{Binding Scripts.SaveCommand}" />
                <Grid IsVisible="{Binding Scripts.SelectedNode, Converter={conv:NullToBoolConverter IsInverse=True}}">
                    <v:ImageView IsVisible="{Binding ShowExecuteButton, Source={x:Reference thisControl}}" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Play_arrow}"
                             Command="{Binding ExecuteScriptCommand}"
                             CommandParameter="{Binding Scripts.SelectedNode}" />
                </Grid>
            </HorizontalStackLayout>
        </Grid>
    </Grid>
</ContentView>
