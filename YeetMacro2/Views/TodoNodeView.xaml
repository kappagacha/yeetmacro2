<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:nvm="clr-namespace:YeetMacro2.ViewModels.NodeViewModels"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             BackgroundColor="{AppThemeBinding Light={StaticResource Background}, Dark={StaticResource BackgroundDark}}"
             xmlns:material="http://schemas.enisn-projects.io/dotnet/maui/uraniumui/material"
             xmlns:vlv="clr-namespace:Microsoft.Maui.Controls;assembly=VirtualListView"
             x:Class="YeetMacro2.Views.TodoNodeView"
             x:Name="thisView">
    <ContentView.Resources>
        <DataTemplate x:Key="TodoJsonParentTemplate" x:DataType="{x:Null}">
            <Grid ColumnDefinitions="Auto, *" RowDefinitions="Auto, Auto" ColumnSpacing="5">
                <Grid WidthRequest="15" />
                <v:ToggleImageView Grid.Row="0" Grid.Column="0"
                                   IsVisible="{Binding Children.Count, Converter={conv:NumberToBoolConverter}}"
                                   ImageHeight="15"
                                   ImageWidth="15"
                                   FontFamily="MaterialOutlined" 
                                   Glyph="{x:Static mi:MaterialOutlined.Keyboard_arrow_right}"
                                   ToggledGlyph="{x:Static mi:MaterialOutlined.Keyboard_arrow_down}"
                                   IsToggled="{Binding IsExpanded}"
                                   IsToggledFromImageOnly="True"
                                   HeightRequest="20" />
                <Grid Grid.Row="0" Grid.Column="1" HeightRequest="20">
                    <Grid HeightRequest="20">
                        <Label Text="{Binding Key}" TextColor="{StaticResource Primary}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="BackgroundColor" Value="Blue" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}" 
                                     Command="{Binding Todos.SelectJsonElementCommand, Source={RelativeSource AncestorType={x:Type v:TodoNodeView}}}" />
                    </Grid>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="1" IsVisible="{Binding Children.Count, Converter={conv:NumberToBoolConverter}}">
                    <!--<CollectionView ItemsSource="{Binding Children}" IsVisible="{Binding IsExpanded}"
                                ItemTemplate="{conv:DynamicTemplateSelector}" />-->
                    <vlv:VirtualListView Adapter="{Binding Children}" IsVisible="{Binding IsExpanded}"
                                         ItemTemplateSelector="{conv:VirtualDynamicTemplateSelector}"
                                         HeightRequest="{Binding ChildrenHeight}"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TodoJsonBooleanTemplate" x:DataType="nvm:TodoJsonBooleanViewModel">
            <HorizontalStackLayout Spacing="4" HeightRequest="{Binding Height}">
                <Grid Margin="20,0,0,0" VerticalOptions="Center">
                    <Label Text="{Binding Key}" TextColor="{StaticResource Primary}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                                <Setter Property="BackgroundColor" Value="Blue" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}" 
                                 Command="{Binding Todos.SelectJsonElementCommand, Source={RelativeSource AncestorType={x:Type v:TodoNodeView}}}" />
                </Grid>
                <CheckBox IsChecked="{Binding IsChecked}" VerticalOptions="Center" />
            </HorizontalStackLayout>
        </DataTemplate>
        <DataTemplate x:Key="TodoJsonCountTemplate" x:DataType="{x:Type nvm:TodoJsonCountViewModel}">
            <HorizontalStackLayout HeightRequest="{Binding Height}">
                <Grid Margin="20,0,0,0">
                    <Label Text="{Binding Key}" TextColor="{StaticResource Primary}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                                <Setter Property="BackgroundColor" Value="Blue" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}" 
                            Command="{Binding Todos.SelectJsonElementCommand, Source={RelativeSource AncestorType={x:Type v:TodoNodeView}}}" />
                </Grid>
                <v:IntegerStepper Value="{Binding Count}" />
            </HorizontalStackLayout>
        </DataTemplate>
    </ContentView.Resources>
    <Border Stroke="{StaticResource Primary}" BackgroundColor="Transparent" Padding="3">
        <Grid>
            <Grid IsVisible="{Binding SubView, Converter={conv:NullToBoolConverter IsInverse=True}, Source={Reference thisView}}">
                <!--<CollectionView ItemsSource="{Binding SubView.Children, Source={Reference thisView}}"
                                HorizontalOptions="Fill"  VerticalOptions="Fill"
                                ItemTemplate="{conv:DynamicTemplateSelector Root={Binding .,Source={Reference thisView}}}" />-->
                <vlv:VirtualListView Adapter="{Binding SubView.Children, Source={Reference thisView}}"
                                HorizontalOptions="Fill"  VerticalOptions="Fill"
                                ItemTemplateSelector="{conv:VirtualDynamicTemplateSelector Root={Binding .,Source={Reference thisView}}}" />
            </Grid>
            <Grid ColumnDefinitions="*,3*" IsVisible="{Binding SubView, Converter={conv:NullToBoolConverter}, Source={Reference thisView}}">
                <v:NodeView Grid.Column="0" NodeManager="{Binding Todos, Source={Reference thisView}}" />
                <mct:DockLayout Grid.Column="1">
                    <DatePicker IsVisible="{Binding Todos.SelectedNode, Source={Reference thisView}, Converter={conv:NullToBoolConverter IsInverse=True}}" 
                                Date="{Binding Todos.SelectedNode.Date, Source={Reference thisView}, Converter={conv:DateOnlyConverter}}" />
                    <Grid>
                        <!--<CollectionView IsVisible="{Binding Todos.ShowJsonEditor, Source={Reference thisView}, Converter={conv:InverseBoolConverter}}"
                                        x:DataType="{x:Null}" ItemsSource="{Binding Todos.SelectedNode.JsonViewModel.Children, Source={Reference thisView}}"
                                        HorizontalOptions="Fill"  VerticalOptions="Fill" ItemTemplate="{conv:DynamicTemplateSelector}" />-->
                        <vlv:VirtualListView IsVisible="{Binding Todos.ShowJsonEditor, Source={Reference thisView}, Converter={conv:InverseBoolConverter}}"
                                        x:DataType="{x:Null}" Adapter="{Binding Todos.SelectedNode.JsonViewModel.Children, Source={Reference thisView}}"
                                        HorizontalOptions="Fill"  VerticalOptions="Fill" ItemTemplateSelector="{conv:VirtualDynamicTemplateSelector}" />
                        <Grid IsVisible="{Binding Todos.ShowJsonEditor, Source={Reference thisView}}">
                            <Editor x:Name="dataEditor" x:DataType="{x:Null}" Text="{Binding Todos.SelectedNode.Data, Source={Reference thisView}, Mode=OneWay}" AutoSize="TextChanges" />
                            <HorizontalStackLayout HorizontalOptions="End" VerticalOptions="End" Margin="0,0,40,0" Spacing="5">
                                <Grid HorizontalOptions="End" VerticalOptions="End">
                                    <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Select_all}" />
                                    <ImageButton Clicked="JsonText_SelectAll" />
                                </Grid>
                                <v:ImageView 
                                      FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Save}" Color="{StaticResource Primary}" 
                                      Command="{Binding Todos.SaveTodoCommand, Source={Reference thisView}}">
                                    <v:ImageView.CommandParameter>
                                        <MultiBinding Converter="{conv:PassThroughConverter}">
                                            <Binding Path="Todos.SelectedNode" Source="{Reference thisView}" />
                                            <Binding Path="Text" Source="{Reference dataEditor}" />
                                        </MultiBinding>
                                    </v:ImageView.CommandParameter>
                                </v:ImageView>
                            </HorizontalStackLayout>
                        </Grid>
                    </Grid>
                </mct:DockLayout>
                <VerticalStackLayout Grid.ColumnSpan="2" HorizontalOptions="End" VerticalOptions="End">
                    <VerticalStackLayout IsVisible="{Binding IsToggled, Source={Reference menuToggle}}">
                        <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Unfold_more_double}" 
                                     Command="{Binding Todos.ExpandAllElementsCommand, Source={Reference thisView}}" />
                        <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Unfold_less_double}" 
                                     Command="{Binding Todos.CollapseAllElementsCommand, Source={Reference thisView}}" />
                        <v:ImageView FontFamily="MaterialRegular" Glyph="{x:Static mi:MaterialRegular.Vertical_align_top}"
                                     IsVisible="{Binding Todos.SelectedJsonElement, Source={Reference thisView}, Converter={conv:NullToBoolConverter IsInverse=True}}"
                                     Command="{Binding Todos.MoveElementTopCommand, Source={Reference thisView}}" CommandParameter="{Binding Todos.SelectedJsonElement, Source={Reference thisView}}" />
                        <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.ArrowUp}"
                                     IsVisible="{Binding Todos.SelectedJsonElement, Source={Reference thisView}, Converter={conv:NullToBoolConverter IsInverse=True}}"
                                     Command="{Binding Todos.MoveElementUpCommand, Source={Reference thisView}}" CommandParameter="{Binding Todos.SelectedJsonElement, Source={Reference thisView}}" />
                        <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.ArrowDown}"
                                     IsVisible="{Binding Todos.SelectedJsonElement, Source={Reference thisView}, Converter={conv:NullToBoolConverter IsInverse=True}}"
                                     Command="{Binding Todos.MoveElementDownCommand, Source={Reference thisView}}" CommandParameter="{Binding Todos.SelectedJsonElement, Source={Reference thisView}}" />
                        <v:ImageView FontFamily="MaterialRegular" Glyph="{x:Static mi:MaterialRegular.Vertical_align_bottom}"
                                     IsVisible="{Binding Todos.SelectedJsonElement, Source={Reference thisView}, Converter={conv:NullToBoolConverter IsInverse=True}}"
                                     Command="{Binding Todos.MoveElementBottomCommand, Source={Reference thisView}}" CommandParameter="{Binding Todos.SelectedJsonElement, Source={Reference thisView}}" />
                        <v:ToggleImageView IsVisible="{Binding Todos.SelectedNode, Source={Reference thisView}, Converter={conv:NullToBoolConverter IsInverse=True}}"
                                     IsToggled="{Binding Todos.ShowJsonEditor, Source={Reference thisView}}" ToggledColor="{StaticResource Primary}"
                                     FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Edit}" />
                        <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.TrashCan}" Color="Red" 
                                     IsVisible="{Binding Todos.SelectedJsonElement, Source={Reference thisView}, Converter={conv:NullToBoolConverter IsInverse=True}}"
                                     Command="{Binding Todos.DeleteJsonElementCommand, Source={Reference thisView}}" CommandParameter="{Binding Todos.SelectedJsonElement, Source={Reference thisView}}" />
                        <v:ImageView FontFamily="FASolid" Glyph="{x:Static fa:Solid.Plus}" Command="{Binding Todos.AddJsonElementCommand, Source={Reference thisView}}" />
                    </VerticalStackLayout>
                    <v:ToggleImageView x:Name="menuToggle" FontFamily="FASolid" Glyph="{x:Static fa:Solid.Bars}" ToggledColor="{StaticResource Primary}" />
                </VerticalStackLayout>
                <HorizontalStackLayout Grid.ColumnSpan="2" HorizontalOptions="Start" VerticalOptions="End">
                    <v:ToggleImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Data_object}" IsToggled="{Binding Todos.ShowTemplate, Source={Reference thisView}}"
                                       ToggledColor="{StaticResource Primary}" Text="Template" />
                </HorizontalStackLayout>
            </Grid>
            <ActivityIndicator Grid.ColumnSpan="2" IsRunning="{Binding IsBusy}" />
        </Grid>
       
    </Border>
</ContentView>
