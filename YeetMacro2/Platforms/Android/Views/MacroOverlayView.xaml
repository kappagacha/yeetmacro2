<?xml version="1.0" encoding="utf-8" ?>
<ContentView xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:pvm="clr-namespace:YeetMacro2.Platforms.Android.ViewModels"
             x:DataType="pvm:AndriodHomeViewModel"
             vm:ViewModelLocator.ViewModelType="{x:Type pvm:AndriodHomeViewModel}"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             x:Class="YeetMacro2.Platforms.Android.Views.MacroOverlayView"
             HeightRequest="150">
    <Grid Padding="0,30,0,0">
        <VerticalStackLayout>
            <HorizontalStackLayout Spacing="5">
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Branding_watermark}" Color="LightGray"
                                                 Command="{Binding ToggleProjectionServiceCommand}">
                    <v:ImageView.Triggers>
                        <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding IsProjectionServiceEnabled}" Value="True">
                            <Setter Property="Color" Value="Green" />
                        </DataTrigger>
                    </v:ImageView.Triggers>
                </v:ImageView>
                <BoxView WidthRequest="1" Color="{StaticResource Primary}"/>
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Touch_app}" Color="LightGray"
                                                 Command="{Binding ToggleAccessibilityPermissionsCommand}">
                    <v:ImageView.Triggers>
                        <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding IsAccessibilityEnabled}" Value="True">
                            <Setter Property="Color" Value="Green" />
                        </DataTrigger>
                    </v:ImageView.Triggers>
                </v:ImageView>
                <BoxView WidthRequest="1" Color="{StaticResource Primary}"/>
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Call_to_action}" Color="LightGray"
                                                 Command="{Binding MacroManagerViewModel.ToggleShowStatusPanelCommand}">
                    <v:ImageView.Triggers>
                        <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding MacroManagerViewModel.ShowStatusPanel}" Value="True">
                            <Setter Property="Color" Value="Green" />
                        </DataTrigger>
                    </v:ImageView.Triggers>
                </v:ImageView>
                <BoxView WidthRequest="1" Color="{StaticResource Primary}"/>
                <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Filter_center_focus}"  Color="LightGray"
                                                 Command="{Binding MacroManagerViewModel.ToggleInDebugModeCommand}">
                    <v:ImageView.Triggers>
                        <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding MacroManagerViewModel.InDebugMode}" Value="True">
                            <Setter Property="Color" Value="Green" />
                        </DataTrigger>
                    </v:ImageView.Triggers>
                </v:ImageView>
                <BoxView WidthRequest="1" Color="{StaticResource Primary}"/>
                <Label Text="{Binding CurrentResolution, StringFormat='Current Resolution: {0}'}" TextColor="{StaticResource Primary}">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding HasValidResolution}" Value="False">
                            <Setter Property="TextColor" Value="Red" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <BoxView WidthRequest="1" Color="{StaticResource Primary}"/>
                <Label Text="{Binding OverlayArea, StringFormat='Overlay Area: {0}'}" TextColor="{StaticResource Primary}" />
                <BoxView WidthRequest="1" Color="{StaticResource Primary}"/>
                <!--<Label Text="{Binding DisplayCutoutTop, StringFormat='Display Cutout Top: {0}'}" TextColor="{StaticResource Primary}">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding HasCutoutTop}" Value="True">
                            <Setter Property="TextColor" Value="Red" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>-->
            </HorizontalStackLayout>
            <HorizontalStackLayout>
                <Label Text="{Binding CurrentPackage, StringFormat='Current Package: {0}'}" TextColor="Red">
                    <Label.Triggers>
                        <DataTrigger TargetType="{x:Type Label}" Binding="{Binding IsCurrentPackageValid}" Value="True">
                            <Setter Property="TextColor" Value="{StaticResource Primary}" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <BoxView WidthRequest="1" Color="{StaticResource Primary}"/>
                <Label Text="{Binding MacroManagerViewModel.SelectedMacroSet.Name, StringFormat='Selected MacroSet: {0}'}" TextColor="{StaticResource Primary}" />
            </HorizontalStackLayout>
            
        </VerticalStackLayout>
        <v:ImageView HorizontalOptions="End" VerticalOptions="Start" FontFamily="FASolid" Glyph="{x:Static fa:Solid.x}" Color="Red"
                                                 Command="{Binding CloseMacroOverlayCommand}" />
    </Grid>
</ContentView>
