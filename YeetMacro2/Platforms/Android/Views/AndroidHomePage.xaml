<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:pgs="clr-namespace:YeetMacro2.Pages"
             xmlns:mc="schemas.openxmlformats.org/markup-compatibility/2006"  
             xmlns:avm="clr-namespace:YeetMacro2.Platforms.Android.ViewModels"
             xmlns:av="clr-namespace:YeetMacro2.Platforms.Android.Views"
             x:Class="YeetMacro2.Platforms.Android.Views.AndroidHomePage"
             xmlns:fa="clr-namespace:UraniumUI.Icons.FontAwesome;assembly=UraniumUI.Icons.FontAwesome"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             vm:ViewModelLocator.ViewModelType="{x:Type avm:AndriodHomeViewModel}"
             Title="AndroidHomePage">
    <ContentPage.Behaviors>
        <mct:EventToCommandBehavior
                EventName="Appearing"
                Command="{OnPlatform Android={Binding AppearCommand}}" />
    </ContentPage.Behaviors>
    <Grid RowDefinitions="Auto,*">
        <Label Grid.Row="0" Text="YeetMacro" HorizontalTextAlignment="Center" FontSize="Title" FontAttributes="Bold" />
        <ScrollView Grid.Row="1">
            <VerticalStackLayout Padding="30,24,30,24" Spacing="10" BindingContext="{Binding BindingContext, Source={RelativeSource AncestorType={x:Type av:AndroidHomePage}}}">
                <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,Auto">
                    <v:ImageView Grid.Row="0" Grid.Column="0"  FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Branding_watermark}" Color="LightGray"
                                                 Command="{Binding ToggleProjectionServiceCommand}">
                        <v:ImageView.Triggers>
                            <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding IsProjectionServiceEnabled}" Value="True">
                                <Setter Property="Color" Value="Green" />
                            </DataTrigger>
                        </v:ImageView.Triggers>
                    </v:ImageView>
                    <Label Grid.Row="0" Grid.Column="1" VerticalTextAlignment="Center" Text="Projection Service">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ToggleProjectionServiceCommand}" />
                        </Label.GestureRecognizers>
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding IsProjectionServiceEnabled}" Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <v:ImageView Grid.Row="1" Grid.Column="0"  FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Touch_app}" Color="LightGray"
                                                 Command="{Binding ToggleAccessibilityPermissionsCommand}">
                        <v:ImageView.Triggers>
                            <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding IsAccessibilityEnabled}" Value="True">
                                <Setter Property="Color" Value="Green" />
                            </DataTrigger>
                        </v:ImageView.Triggers>
                    </v:ImageView>
                    <Label Grid.Row="1" Grid.Column="1" VerticalTextAlignment="Center" Text="Accessibility Service">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ToggleAccessibilityPermissionsCommand}" />
                        </Label.GestureRecognizers>
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding IsAccessibilityEnabled}" Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <v:ImageView Grid.Row="2" Grid.Column="0" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Dashboard_customize}" Color="LightGray"
                                                 Command="{Binding ToggleShowMacroOverlayCommand}">
                        <v:ImageView.Triggers>
                            <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding ShowMacroOverlay}" Value="True">
                                <Setter Property="Color" Value="Green" />
                            </DataTrigger>
                        </v:ImageView.Triggers>
                    </v:ImageView>
                    <Label Grid.Row="2" Grid.Column="1" VerticalTextAlignment="Center" Text="Show Macro Overlay">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding ToggleShowMacroOverlayCommand}" />
                        </Label.GestureRecognizers>
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding ShowMacroOverlay}" Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <v:ImageView Grid.Row="3" Grid.Column="0" FontFamily="FASolid" Glyph="{x:Static fa:Solid.Terminal}" Color="LightGray"
                                                 Command="{Binding MacroManagerViewModel.ToggleShowLogViewCommand}">
                        <v:ImageView.Triggers>
                            <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding MacroManagerViewModel.ShowLogView}" Value="True">
                                <Setter Property="Color" Value="Green" />
                            </DataTrigger>
                        </v:ImageView.Triggers>
                    </v:ImageView>
                    <Label Grid.Row="3" Grid.Column="1" VerticalTextAlignment="Center" Text="Show Status Panel">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding MacroManagerViewModel.ToggleShowLogViewCommand}" />
                        </Label.GestureRecognizers>
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding MacroManagerViewModel.ShowLogView}" Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                    <v:ImageView Grid.Row="4" Grid.Column="0" FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Filter_center_focus}"  Color="LightGray"
                                                 Command="{Binding MacroManagerViewModel.ToggleInDebugModeCommand}">
                        <v:ImageView.Triggers>
                            <DataTrigger TargetType="{x:Type v:ImageView}" Binding="{Binding MacroManagerViewModel.InDebugMode}" Value="True">
                                <Setter Property="Color" Value="Green" />
                            </DataTrigger>
                        </v:ImageView.Triggers>
                    </v:ImageView>
                    <Label Grid.Row="4" Grid.Column="1" VerticalTextAlignment="Center" Text="Debug Mode">
                        <Label.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding MacroManagerViewModel.ToggleInDebugModeCommand}" />
                        </Label.GestureRecognizers>
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding MacroManagerViewModel.InDebugMode}" Value="True">
                                <Setter Property="TextColor" Value="Green" />
                            </DataTrigger>
                        </Label.Triggers>
                    </Label>
                </Grid>
                <Button Text="Copy Database" Command="{Binding CopyDbCommand}" />
                <Button Text="Delete Database" Command="{Binding DeleteDbCommand}" />
            </VerticalStackLayout>
        </ScrollView>
    </Grid>
</ContentPage>