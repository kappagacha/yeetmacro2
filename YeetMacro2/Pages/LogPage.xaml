<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="YeetMacro2.Pages.LogPage"
             xmlns:m="clr-namespace:YeetMacro2.Data.Models"
             xmlns:vm="clr-namespace:YeetMacro2.ViewModels"
             xmlns:v="clr-namespace:YeetMacro2.Views"
             x:DataType="vm:LogServiceViewModel"
             vm:ViewModelLocator.ViewModelType="{x:Type vm:LogServiceViewModel}"
             xmlns:conv="clr-namespace:YeetMacro2.Converters"
             xmlns:mi="clr-namespace:UraniumUI.Icons.MaterialIcons;assembly=UraniumUI.Icons.MaterialIcons"
             xmlns:p="clr-namespace:YeetMacro2.Pages"
             x:Name="thisPage"
             Title="LogPage">
    <ContentPage.Resources>
        <DataTemplate x:Key="ScriptLogTemplate" x:DataType="vm:ScriptLogViewModel">
            <Grid ColumnDefinitions="Auto,*" RowDefinitions="Auto,Auto" ColumnSpacing="5">
                <Grid WidthRequest="15" />
                <v:ToggleImageView Grid.Row="0" Grid.Column="0"
                           x:Name="toggleImageView"
                           IsVisible="{Binding Logs.Count, Converter={conv:NumberToBoolConverter}}"
                           ImageHeight="15"
                           ImageWidth="15"
                           FontFamily="MaterialOutlined" 
                           Glyph="{x:Static mi:MaterialOutlined.Keyboard_arrow_right}"
                           ToggledGlyph="{x:Static mi:MaterialOutlined.Keyboard_arrow_down}"
                           IsToggledFromImageOnly="True"
                           HeightRequest="20" />
                <Grid Grid.Row="0" Grid.Column="1" HeightRequest="20">
                    <Grid HeightRequest="20">
                        <Label Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                            <Label.Text>
                                <MultiBinding StringFormat="{}[{0}] {1}">
                                    <Binding Path="MacroSet" />
                                    <Binding Path="Script" />
                                </MultiBinding>
                            </Label.Text>
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="BackgroundColor" Value="Blue" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}"
                                     Command="{Binding SelectLogCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                    </Grid>
                    <Grid HeightRequest="20" HorizontalOptions="End" IsVisible="{Binding ParentId, Converter={conv:NullToBoolConverter}}">
                        <v:ToggleImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Archive}" IsToggled="{Binding IsArchived}"
                                           ToggledColor="{StaticResource Primary}"
                                           CommandParameter="{Binding .}"
                                           Command="{Binding ToggleLogArchivedCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                    </Grid>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="1" IsVisible="{Binding Logs.Count, Converter={conv:NumberToBoolConverter}}">
                    <CollectionView ItemsSource="{Binding Logs}" ItemTemplate="{conv:DynamicTemplateSelector}" 
                                    IsVisible="{Binding IsToggled, Source={Reference toggleImageView}, x:DataType=v:ToggleImageView}"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ExceptionLogTemplate" x:DataType="vm:ExceptionLogViewModel">
            <Grid ColumnDefinitions="Auto,*" RowDefinitions="Auto,Auto" ColumnSpacing="5">
                <Grid WidthRequest="15" />
                <v:ToggleImageView Grid.Row="0" Grid.Column="0"
                                   x:Name="toggleImageView"
                                   IsVisible="{Binding Logs.Count, Converter={conv:NumberToBoolConverter}}"
                                   ImageHeight="15"
                                   ImageWidth="15"
                                   FontFamily="MaterialOutlined" 
                                   Glyph="{x:Static mi:MaterialOutlined.Keyboard_arrow_right}"
                                   ToggledGlyph="{x:Static mi:MaterialOutlined.Keyboard_arrow_down}"
                                   IsToggledFromImageOnly="True"
                                   HeightRequest="20" />
                <Grid Grid.Row="0" Grid.Column="1" HeightRequest="20">
                    <Grid HeightRequest="20">
                        <Label Text="{Binding Message}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                            <Label.Triggers>
                                <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                                    <Setter Property="BackgroundColor" Value="Blue" />
                                </DataTrigger>
                            </Label.Triggers>
                        </Label>
                        <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}"
                                     Command="{Binding SelectLogCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                    </Grid>
                    <Grid HeightRequest="20" HorizontalOptions="End" IsVisible="{Binding ParentId, Converter={conv:NullToBoolConverter}}">
                        <v:ToggleImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Archive}" IsToggled="{Binding IsArchived}"
                                           ToggledColor="{StaticResource Primary}"
                                           CommandParameter="{Binding .}"
                                           Command="{Binding ToggleLogArchivedCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                    </Grid>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="1" IsVisible="{Binding Logs.Count, Converter={conv:NumberToBoolConverter}}">
                    <CollectionView ItemsSource="{Binding Logs}" ItemTemplate="{conv:DynamicTemplateSelector}"
                                    IsVisible="{Binding IsToggled, Source={Reference toggleImageView}, x:DataType=v:ToggleImageView}" />
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ScreenCaptureLogTemplate" x:DataType="vm:ScreenCaptureLogViewModel">
            <Grid Margin="0" Padding="0">
                <Label Text="{Binding Message}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="BackgroundColor" Value="Blue" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}"
                             Command="{Binding SelectLogCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                <HorizontalStackLayout HeightRequest="20" HorizontalOptions="End">
                    <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Download}" 
                       CommandParameter="{Binding .}"
                       Command="{Binding DownloadScreenCaptureCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                    <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Content_copy}" 
                       CommandParameter="{Binding .}"
                       Command="{Binding CopyMessgeToClipboardCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                </HorizontalStackLayout>
                <Grid HeightRequest="20" HorizontalOptions="End" IsVisible="{Binding ParentId, Converter={conv:NullToBoolConverter}}">
                    <v:ToggleImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Archive}" IsToggled="{Binding IsArchived}"
                                           ToggledColor="{StaticResource Primary}"
                                           CommandParameter="{Binding .}"
                                           Command="{Binding ToggleLogArchivedCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="LogTemplate" x:DataType="vm:LogViewModel">
            <Grid Margin="0" Padding="0">
                <Label Text="{Binding Message}" Margin="0" Padding="0" VerticalOptions="Center" BackgroundColor="Transparent">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" Binding="{Binding IsSelected}" Value="True">
                            <Setter Property="BackgroundColor" Value="Blue" />
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
                <ImageButton Margin="0" Padding="0" CommandParameter="{Binding .}"
                             Command="{Binding SelectLogCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                <Grid HeightRequest="20" HorizontalOptions="End">
                    <v:ImageView FontFamily="MaterialOutlined" Glyph="{x:Static mi:MaterialOutlined.Content_copy}" 
                                CommandParameter="{Binding .}"
                                Command="{Binding CopyMessgeToClipboardCommand, Source={RelativeSource AncestorType={x:Type p:LogPage}}, x:DataType=vm:LogServiceViewModel}" />
                </Grid>
            </Grid>
        </DataTemplate>
    </ContentPage.Resources>
    <Grid>
        <Image Source="{Binding LogImage}" />
        <Grid RowDefinitions="Auto,*">
            <Grid.Triggers>
                <DataTrigger TargetType="Grid" Binding="{Binding LogImage, Converter={conv:NullToBoolConverter}}" Value="False">
                    <Setter Property="Opacity" Value="0.2" />
                </DataTrigger>
            </Grid.Triggers>
            <FlexLayout Grid.Row="0" JustifyContent="SpaceEvenly" Wrap="Wrap">
                <Button Text="Test" FontAttributes="Bold" Command="{Binding TestCommand}"/>
                <Button Text="Load Archive Logs" FontAttributes="Bold" Command="{Binding LoadArchivedLogsCommand}"/>
                <Button Text="Clear Archive Logs" FontAttributes="Bold" TextColor="White" BackgroundColor="Red" Command="{Binding ClearArchivedLogsCommand}"/>
                <Button Text="Load Logs" FontAttributes="Bold" Command="{Binding LoadLogsCommand}"/>
                <Button Text="Clear Logs" FontAttributes="Bold" TextColor="White" BackgroundColor="Red" Command="{Binding ClearLogsCommand}"/>
            </FlexLayout>
            <ScrollView Grid.Row="2" >
                <CollectionView ItemsSource="{Binding Logs}" HorizontalOptions="Fill"  VerticalOptions="Fill"
                        ItemTemplate="{conv:DynamicTemplateSelector Root={Binding .,Source={Reference thisPage}}}" />
            </ScrollView>
        </Grid>
    </Grid>
    
</ContentPage>