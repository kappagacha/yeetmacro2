name: Build and Release APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      # https://blog.taranissoftware.com/build-net-maui-apps-with-github-actions
      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources
        
      - name: Restore NuGet Packages
        run: dotnet restore

      - name: Build APK
        run: dotnet build -f net7.0-android -c Release

      - name: Upload APK as Release Asset
        uses: actions/upload-artifact@v1
        with:
          name: app-release
          path: YeetMacro2/bin/Release/net7.0-android/com.companyname.yeetmacro2-Signed.apk
      
      - name: Attach Asset to Release
        uses: actions/github-script@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const { owner, repo } = context.repo;
            const releaseId = ${{ steps.create_release.outputs.id }};
            const artifactPath = ${{ github.workspace }}/YeetMacro2/bin/Release/net7.0-android/com.companyname.yeetmacro2-Signed.apk;
            const artifactName = 'yeetmacro.apk';

            const { data: uploadUrl } = await github.repos.createReleaseAsset({
              owner,
              repo,
              release_id: releaseId,
              name: artifactName,
              data: artifactPath
            });

            console.log(`Uploaded ${artifactName} to release ${releaseId}`);